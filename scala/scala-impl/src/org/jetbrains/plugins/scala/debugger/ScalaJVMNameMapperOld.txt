package org.jetbrains.plugins.scala.debugger;

import com.intellij.debugger.NameMapper;
import com.intellij.openapi.application.ApplicationManager;
import com.intellij.openapi.util.Computable;
import com.intellij.psi.PsiClass;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.plugins.scala.lang.psi.api.toplevel.typedef.ScObject;
import org.jetbrains.plugins.scala.lang.psi.api.toplevel.typedef.ScTemplateDefinition;
import org.jetbrains.plugins.scala.lang.psi.api.toplevel.typedef.ScTrait;
import org.jetbrains.plugins.scala.util.ScalaUtils;

public class ScalaJVMNameMapper implements NameMapper {

  public String getQualifiedName(@NotNull final PsiClass clazz) {
    String qualifiedName = ApplicationManager.getApplication().runReadAction(new Computable<String>() {public String compute() {
      if (clazz instanceof ScTemplateDefinition) {
        return ((ScTemplateDefinition) clazz).qualifiedName();
      }
      return clazz.getQualifiedName();
    }
    });
    if (clazz instanceof ScObject) return qualifiedName + "$";
    if (clazz instanceof ScTrait) return qualifiedName + "$class";
    return qualifiedName;
  }
}


